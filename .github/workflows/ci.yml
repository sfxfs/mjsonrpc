name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-lcov:
    runs-on: ubuntu-latest
    name: Tests with Coverage Check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake gcc lcov

      - name: Configure CMake (with coverage flags)
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS="--coverage" -DCMAKE_EXE_LINKER_FLAGS="--coverage"

      - name: Build project
        run: cmake --build build

      - name: Run tests
        run: |
          cd build && ctest --output-on-failure

      - name: Check coverage
        uses: imciner2/run-lcov@v1
        with:
          input_directory: build
          output_file: coverage.info
          exclude: '"*/Unity/*" "*/cJSON/*"'

      - name: Generate coverage HTML report
        run: |
          genhtml coverage.info --output-directory out

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-html
          path: out

  memory-check:
    runs-on: ubuntu-latest
    name: Memory Check with Valgrind
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake gcc valgrind

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build project
        run: cmake --build build

      - name: Run tests with valgrind
        run: |
          cd output
          for t in mjsonrpc-example-*; do
            echo "Running valgrind on $t"
            valgrind --leak-check=full --error-exitcode=1 ./$t || exit 1
          done
